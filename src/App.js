import "./App.css";
import PostList, {getPostItems} from "./Posts/PostList";
import Modal from "./Modal/Modal";
import ModalCreateWindows from "./Modal/ModalCreateWindows";
import React from "react";
import Context from "./context";

function App() {
    const [Items, setItems] = React.useState([
        {
            idItem: 0,
            Title: "–ß—Ç–æ —Ç–∞–∫–æ–µ Lorem Ipsum?",
            PostText:
                'Lorem Ipsum - —ç—Ç–æ —Ç–µ–∫—Å—Ç-"—Ä—ã–±–∞", —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤ –ø–µ—á–∞—Ç–∏ –∏ –≤—ç–±-–¥–∏–∑–∞–π–Ω–µ. Lorem Ipsum —è–≤–ª—è–µ—Ç—Å—è ' +
                '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π "—Ä—ã–±–æ–π" –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ —Å –Ω–∞—á–∞–ª–∞ XVI –≤–µ–∫–∞. –í —Ç–æ –≤—Ä–µ–º—è –Ω–µ–∫–∏–π –±–µ–∑—ã–º—è–Ω–Ω—ã–π –ø–µ—á–∞—Ç–Ω–∏–∫ ' +
                "—Å–æ–∑–¥–∞–ª –±–æ–ª—å—à—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ñ–æ—Ä–º —à—Ä–∏—Ñ—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è Lorem Ipsum –¥–ª—è —Ä–∞—Å–ø–µ—á–∞—Ç–∫–∏ –æ–±—Ä–∞–∑—Ü–æ–≤.",
            Datatime: new Date(2014, 0, 1, 18, 12, 0, 0),
        },
        {
            idItem: 1,
            Title: "–ü–æ—á–µ–º—É –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?",
            PostText:
                "–î–∞–≤–Ω–æ –≤—ã—è—Å–Ω–µ–Ω–æ, —á—Ç–æ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ –¥–∏–∑–∞–π–Ω–∞ –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –º–µ—à–∞–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è. " +
                "Lorem Ipsum –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ —Ç–æ—Ç –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ –∏–ª–∏ –º–µ–Ω–µ–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞, " +
                "–∞ —Ç–∞–∫–∂–µ —Ä–µ–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—É–∫–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∞–±–∑–∞—Ü–∞—Ö, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–π –¥—É–±–ª–∏–∫–∞—Ü–∏–∏ " +
                '"–ó–¥–µ—Å—å –≤–∞—à —Ç–µ–∫—Å—Ç.',
            Datatime: new Date(2018, 0, 1, 18, 13, 0, 0),
        },
        {
            idItem: 2,
            Title: "–û—Ç–∫—É–¥–∞ –æ–Ω –ø–æ—è–≤–∏–ª—Å—è?",
            PostText:
                "–ú–Ω–æ–≥–∏–µ –¥—É–º–∞—é—Ç, —á—Ç–æ Lorem Ipsum - –≤–∑—è—Ç—ã–π —Å –ø–æ—Ç–æ–ª–∫–∞ –ø—Å–µ–≤–¥–æ-–ª–∞—Ç–∏–Ω—Å–∫–∏–π –Ω–∞–±–æ—Ä —Å–ª–æ–≤, –Ω–æ —ç—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–∞–∫. " +
                "–ï–≥–æ –∫–æ—Ä–Ω–∏ —É—Ö–æ–¥—è—Ç –≤ –æ–¥–∏–Ω —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –ª–∞—Ç—ã–Ω–∏ 45 –≥–æ–¥–∞ –Ω.—ç., " +
                "—Ç–æ –µ—Å—Ç—å –±–æ–ª–µ–µ –¥–≤—É—Ö —Ç—ã—Å—è—á–µ–ª–µ—Ç–∏–π –Ω–∞–∑–∞–¥. ",
            Datatime: new Date(2011, 0, 1, 18, 14, 0, 0),
        },
        {
            idItem: 3,
            Title: "–û—Ç–∫—É–¥–∞ ?",
            PostText: "–ú–Ω–æ–≥–∏–µ –¥—É–º–∞—é—Ç. ",
            Datatime: new Date(2010, 0, 1, 18, 15, 0, 0),
        },
    ]);

    const [modalActiveEditor, setModalActiveEditor] = React.useState(false);
    const [modalActiveCreator, setModalActiveCreator] = React.useState(false);
    const [currentItem, setCurrentItem] = React.useState(null);
    const [stateSort, setStateSort] = React.useState(false);

    function clickOnPost(item) {
        setModalActiveEditor(true);
        setCurrentItem(item);
    }

    function removePost(id) {
        setItems(Items.filter((item) => item.idItem !== id));
        setModalActiveEditor();
        setCurrentItem(null);
    }

    function editPost(title, text, id) {
        const search = obj => obj.idItem === id;
        let index = Items.findIndex(search)
        console.log(index)
        console.log(Items.at(index))
        console.log("Items Before  ", Items)
        console.log(text, " ", title)
        setItems(
            Items.map((Item) =>
                // Here you accept a id argument to the function and replace it with hard coded ü§™ 2, to make it dynamic.
                Item.idItem === id
                    ? {...Item, Title: title, PostText: text}
                    : {...Item}
            )
        );
        console.log("Items After  ", Items)

    }

    function addPost(title, text) {
        let Item = {
            idItem: Items.length,
            Title: title,
            PostText: text,
            Datatime: new Date()
        }
        console.log(Item)
        setItems(Items => [...Items, Item]);
        console.log("Items After  ", Items)

    }

    function filterItem(title) {
        setItems(Items.filter((item) => item.Title.toLowerCase().includes(title.toLowerCase())));
        console.log("filterTitle", title);
        console.log("filterItem", Items);
    }


    function sortItem(directionByData) {
        if (!directionByData){
            setItems(Items.sort(function (a, b) {
                return new Date(b.Datatime) - new Date(a.Datatime);
            }))
            setStateSort(true);
        }
        console.log("filterItem", Items);

    }

    console.log("items", Items);
    console.log("currentItem", currentItem);

    const postsElementRef = React.useRef(null);

    const refFilter = React.createRef();


    return (
        <Context.Provider value={{removePost, clickOnPost, currentItem}}>
            <div className="App">
                <div className="App-header">
                    <button
                        className="CreatePostButton"
                        onClick={() => setModalActiveCreator(true)}
                    >
                        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
                    </button>
                    <h1>–û–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ React + Redux</h1>
                    <div className="FilterArea">
                        <input ref={refFilter} type="text"/>
                        <button className="FilterPostButton" onClick={() => filterItem(refFilter.current.value)}>
                            –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
                        </button>
                        <br/>
                        <button className="SortPostButton" onClick={() => sortItem(stateSort)}>
                            –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–∞–º
                        </button>
                    </div>
                </div>
                <PostList Items={Items} ref={postsElementRef}/>

                <Modal
                    active={modalActiveEditor}
                    setActive={setModalActiveEditor}
                    item={currentItem}
                    editPost={editPost}
                    removePost={removePost}
                    clickOnPost={clickOnPost}
                />
                <ModalCreateWindows
                    active={modalActiveCreator}
                    setActive={setModalActiveCreator}
                    item={currentItem}
                    addPost={addPost}
                />
            </div>
        </Context.Provider>
    );
}

export default App;
